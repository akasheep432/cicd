<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="implementation-suite.xml" />
	<munit:test name="create-user-flow-test" doc:id="622e825e-5379-4ece-af2c-38cc80d60eab" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock INSERT customer data to database" doc:id="d5b1554a-f79a-4b8e-ac53-8befd0bb105c" processor="db:insert">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="374a0210-d608-48e0-a0db-492d961a64b7" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://createuserflowtest\mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://createuserflowtest\mock_variable_.dwl')]" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="3bbecb7e-0b6a-4579-bcbd-94797a0204b3" >
				<munit:payload value="#[output application/json --- readUrl('classpath://createuserflowtest\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://createuserflowtest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://createuserflowtest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to create-user-flow" doc:id="50a6234d-4fa8-4acc-8c08-c945e9224f91" name="create-user-flow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="abbd5419-6689-4c30-886c-eceb458ca389" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import createuserflowtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Transform Message" doc:id="d2ca6231-a7f5-4b59-8125-94323640cdad" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="cf9efc87-b570-4f04-87c3-9c0c536ad163" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Transform Message" doc:id="90139029-f2a6-4e75-8e88-6af86a245ce2" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="b3647d7c-bad2-46c8-a218-6e4986fab11f" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="get-customer-flow-test" doc:id="67cd642e-f5fa-45c8-8256-4db2c1fe2e61" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock get customer by ID" doc:id="da610626-2e51-413a-9fce-56126ea2b7c9" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="f97a27c4-eb55-4c91-8ff0-9afad629974d" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://getcustomerflowtest\mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://getcustomerflowtest\mock_variable_.dwl')]" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="60002a8c-e5a0-44a5-9288-78c7322982b5" >
				<munit:payload value="#[output application/json --- readUrl('classpath://getcustomerflowtest\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://getcustomerflowtest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getcustomerflowtest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get-customer-flow" doc:id="984d79ae-fd44-4d85-898d-1ca70c5d1a00" name="get-customer-flow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="d92d5c56-8ff1-44a3-bafd-53ecd164ffdb" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getcustomerflowtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Transform Message" doc:id="cf1f41de-42e8-43c9-b23a-bc48cfa4aac0" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="951d0c66-9237-4ef4-96fe-b4ce83b9e24f" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="delete-customer-flow-test" doc:id="504248ad-7cbc-4f6f-bd05-18ba77f5d000" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock get customer by ID" doc:id="f096a695-88bf-4a07-8371-7942e731d264" processor="db:delete">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="c3ada2bc-1beb-4653-ae01-cda324082504" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://deletecustomerflowtest\mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://deletecustomerflowtest\mock_variable_.dwl')]" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="8ca25570-ed4c-447a-8b4d-3a4b0e1d8d08" >
				<munit:payload value="#[output application/json --- readUrl('classpath://deletecustomerflowtest\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://deletecustomerflowtest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://deletecustomerflowtest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to delete-customer-flow" doc:id="9b4266c6-43ac-433a-8afd-8f104f8efd0c" name="delete-customer-flow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="f3b511cc-4014-4446-9d84-4718525e21e9" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import deletecustomerflowtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify validate customer id" doc:id="c26afb55-60c9-4a31-b378-1012f3ffec16" processor="flow-ref" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="daf1a94f-f8d0-44ea-a3d9-98aaa0b1d15c" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Transform Message" doc:id="b7d24414-f949-416b-b3d4-c4664af190fa" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="1fe84f65-cc3f-46ea-9f2e-36c807f627cb" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="update-customer-flow-test" doc:id="f2694469-b59b-49f3-afd2-cc36b5917d22" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock get customer by ID" doc:id="72b8bd42-3a20-48a1-804e-04d86d6d04b9" processor="db:update">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="a2da8d84-c416-4bf0-825a-e4010b7c605f" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://updatecustomerflowtest\mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://updatecustomerflowtest\mock_variable_.dwl')]" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="bf582da1-d70f-4f84-bf27-c17202dca968" >
				<munit:payload value="#[output application/json --- readUrl('classpath://updatecustomerflowtest\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://updatecustomerflowtest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://updatecustomerflowtest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to update-customer-flow" doc:id="65dd9adb-8460-42b2-96b4-f0fde4a61361" name="update-customer-flow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="8e304c31-9eb7-49ce-8920-d81a1d67508e" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import updatecustomerflowtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Transform Message" doc:id="7aa2fb7c-49ab-45af-bde7-e927afbe9da0" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="2a3f77f1-8c43-4b6c-b1b9-d2f00f37da13" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify validate customer id" doc:id="9fd9c9c4-9ff2-4d62-abe3-3bb1f5203cad" processor="flow-ref" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="d5c56cdb-1157-43fa-a0e8-750fed3c03f1" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Transform Message" doc:id="51df03b2-0f06-4cb3-a9cb-20c346b05bb0" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="b5ca11c0-ad53-4758-847e-d84924152116" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="ecomm-user-system-api-main-test" doc:id="7dae93ce-eec2-4ec8-b06e-e51142c27e45" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock APIkit Router" doc:id="673a07ab-b142-45fa-b8ee-b3ba205da985" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="e626cac2-b3a3-4256-894f-e3e9b81250c5" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json --- readUrl('classpath://ecommusersystemapimaintest\mock_payload.dwl')]" mediaType="application/json" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://ecommusersystemapimaintest\mock_variable_.dwl')]" />
						<munit-tools:variable key="httpStatus" value="#[readUrl('classpath://ecommusersystemapimaintest\mock_variable_1.dwl')]" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="eb389f8f-8099-42ba-a247-b3fcc6ebce79" >
				<munit:payload value="#[output application/json --- readUrl('classpath://ecommusersystemapimaintest\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://ecommusersystemapimaintest\set-event_attributes.dwl')]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to ecomm-user-system-api-main" doc:id="86d5e199-46ac-4985-97b5-94251d73f536" name="ecomm-user-system-api-main"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="8c2d25e6-fb61-415e-a9c8-ff3c05b3cf5f" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import ecommusersystemapimaintest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="put:\customer\(customerId):application\json:ecomm-user-system-api-config-test" doc:id="2fdeb748-a15e-472d-84ba-c089ad3f92ac" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Update Customer by ID" doc:id="9f0bcc6e-6b7d-4a9e-b248-49c0a3193e51" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="6dbffacb-17be-4302-9675-e453bf117829" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json --- readUrl('classpath://putcustomercustomerIdapplicationjsonecommusersystemapiconfigtest\mock_payload.dwl')]" mediaType="application/json" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://putcustomercustomerIdapplicationjsonecommusersystemapiconfigtest\mock_variable_.dwl')]" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="3902f0cc-31fb-4e51-85a4-d87d1c3765a7" >
				<munit:payload value="#[output application/json --- readUrl('classpath://putcustomercustomerIdapplicationjsonecommusersystemapiconfigtest\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://putcustomercustomerIdapplicationjsonecommusersystemapiconfigtest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://putcustomercustomerIdapplicationjsonecommusersystemapiconfigtest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to put:\customer\(customerId):application\json:ecomm-user-system-api-config" doc:id="15a5bfb2-b87d-46a8-8f3d-cd681874d48d" name="put:\customer\(customerId):application\json:ecomm-user-system-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="2bc557fe-8cf6-44e3-bab4-cf0af0014b27" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import putcustomercustomerIdapplicationjsonecommusersystemapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="delete:\customer\(customerId):ecomm-user-system-api-config-test" doc:id="0969c219-a868-4c71-8b76-2c3776754d7c" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Delete Customer by ID " doc:id="207479d8-7161-458c-8dd4-e606e8b16f7e" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="3bc5f956-e01a-467d-9d5e-9ab713ecf5c3" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json --- readUrl('classpath://deletecustomercustomerIdecommusersystemapiconfigtest\mock_payload.dwl')]" mediaType="application/json" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://deletecustomercustomerIdecommusersystemapiconfigtest\mock_variable_.dwl')]" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="cc25402f-c3c1-4142-a49c-0e2497c822bb" >
				<munit:payload value="#[readUrl('classpath://deletecustomercustomerIdecommusersystemapiconfigtest\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://deletecustomercustomerIdecommusersystemapiconfigtest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://deletecustomercustomerIdecommusersystemapiconfigtest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to delete:\customer\(customerId):ecomm-user-system-api-config" doc:id="ba02062b-29eb-43d2-ae76-ff51888d7b5a" name="delete:\customer\(customerId):ecomm-user-system-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="74c81d2b-d3a0-47f1-a37a-cdeb2389c334" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import deletecustomercustomerIdecommusersystemapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="get:\customer\(customerId):ecomm-user-system-api-config-test" doc:id="8379fdba-67f4-43f8-ae47-6fbd5ccd09d8" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Get Customer details by ID" doc:id="9a4215d9-c374-42b1-b39e-cb6051028659" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="08f42005-8b56-40c3-984e-fce932360b60" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json --- readUrl('classpath://getcustomercustomerIdecommusersystemapiconfigtest\mock_payload.dwl')]" mediaType="application/json" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://getcustomercustomerIdecommusersystemapiconfigtest\mock_variable_.dwl')]" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="1930c83d-d007-424a-bcfb-56462544f657" >
				<munit:payload value="#[readUrl('classpath://getcustomercustomerIdecommusersystemapiconfigtest\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://getcustomercustomerIdecommusersystemapiconfigtest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getcustomercustomerIdecommusersystemapiconfigtest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get:\customer\(customerId):ecomm-user-system-api-config" doc:id="566fd120-25a2-45ea-9688-5c391412aa24" name="get:\customer\(customerId):ecomm-user-system-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="dbf50cb1-6792-4b58-a6ac-b8a61c4272f4" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getcustomercustomerIdecommusersystemapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="post:\customer:application\json:ecomm-user-system-api-config-test" doc:id="ca2ba949-0e0d-45c5-a820-2433b3fde4d5" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Create customer" doc:id="40559c6e-5ce9-4524-b799-3e36a8a2a617" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="c0a7eed4-0a5e-498e-a5c5-defa417edb63" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json --- readUrl('classpath://postcustomerapplicationjsonecommusersystemapiconfigtest\mock_payload.dwl')]" mediaType="application/json" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://postcustomerapplicationjsonecommusersystemapiconfigtest\mock_variable_.dwl')]" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="fb062a36-b7c3-4ce3-9c44-e19d5cd7e71b" >
				<munit:payload value="#[output application/json --- readUrl('classpath://postcustomerapplicationjsonecommusersystemapiconfigtest\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://postcustomerapplicationjsonecommusersystemapiconfigtest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://postcustomerapplicationjsonecommusersystemapiconfigtest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to post:\customer:application\json:ecomm-user-system-api-config" doc:id="b718748d-f778-44d0-ac07-cdf897fe6184" name="post:\customer:application\json:ecomm-user-system-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="8296f6a0-7248-474d-8128-59717740915e" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import postcustomerapplicationjsonecommusersystemapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>


</mule>
